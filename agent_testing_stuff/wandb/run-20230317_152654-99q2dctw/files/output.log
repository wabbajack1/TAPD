Max Steps:   0%|          | 0/5000000 [00:00<?, ?steps/s]/tmp/ipykernel_21820/707795805.py:22: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  action_pred = F.softmax(action_pred_logit)
Max Steps:   0%|          | 263/5000000 [00:00<4:35:04, 302.92steps/s]
Run model on cuda
==================TRAIN TASK 0======================
====> Progress train task 0
Qvals: (tensor([0.0162, 0.0164, 0.0166, 0.0167, 0.0169, 0.0171, 0.0172, 0.0174, 0.0176,
        0.0178, 0.0179, 0.0181, 0.0183, 0.0185, 0.0187, 0.0189, 0.0191, 0.0192,
        0.0194, 0.0196, 0.0198, 0.0200, 0.0202, 0.0204, 0.0206, 0.0209, 0.0211,
        0.0213, 0.0215, 0.0217, 0.0219, 0.0222, 0.0224, 0.0226, 0.0228, 0.0231,
        0.0233, 0.0235, 0.0238, 0.0240, 0.0243, 0.0245, 0.0247, 0.0250, 0.0252,
        0.0255, 0.0258, 0.0260, 0.0263, 0.0265, 0.0268, 0.0271, 0.0274, 0.0276,
        0.0279, 0.0282, 0.0285, 0.0288, 0.0291, 0.0294, 0.0296, 0.0299, 0.0303,
        0.0306, 0.0309, 0.0312, 0.0315, 0.0318, 0.0321, 0.0325, 0.0328, 0.0331,
        0.0334, 0.0338, 0.0341, 0.0345, 0.0348, 0.0352, 0.0355, 0.0359, 0.0363,
        0.0366, 0.0370, 0.0374, 0.0377, 0.0381, 0.0385, 0.0389, 0.0393, 0.0397,
        0.0401, 0.0405, 0.0409, 0.0413, 0.0417, 0.0421, 0.0426, 0.0430, 0.0434,
        0.0000], device='cuda:0'), torch.Size([100]))
 values (tensor([[[0.0431],
         [0.0425],
         [0.0446],
         [0.0442],
         [0.0439],
         [0.0441],
         [0.0441],
         [0.0440],
         [0.0440],
         [0.0440],
         [0.0438],
         [0.0437],
         [0.0438],
         [0.0439],
         [0.0441],
         [0.0440],
         [0.0441],
         [0.0444],
         [0.0439],
         [0.0442],
         [0.0434],
         [0.0438],
         [0.0440],
         [0.0435],
         [0.0440],
         [0.0441],
         [0.0437],
         [0.0435],
         [0.0437],
         [0.0438],
         [0.0440],
         [0.0439],
         [0.0438],
         [0.0440],
         [0.0434],
         [0.0442],
         [0.0437],
         [0.0443],
         [0.0440],
         [0.0439],
         [0.0440],
         [0.0440],
         [0.0444],
         [0.0435],
         [0.0441],
         [0.0438],
         [0.0444],
         [0.0440],
         [0.0441],
         [0.0437],
         [0.0438],
         [0.0436],
         [0.0440],
         [0.0437],
         [0.0435],
         [0.0431],
         [0.0438],
         [0.0444],
         [0.0439],
         [0.0440],
         [0.0442],
         [0.0443],
         [0.0440],
         [0.0439],
         [0.0433],
         [0.0440],
         [0.0440],
         [0.0439],
         [0.0439],
         [0.0441],
         [0.0443],
         [0.0440],
         [0.0436],
         [0.0436],
         [0.0444],
         [0.0441],
         [0.0439],
         [0.0440],
         [0.0439],
         [0.0438],
         [0.0436],
         [0.0440],
         [0.0436],
         [0.0437],
         [0.0436],
         [0.0441],
         [0.0441],
         [0.0439],
         [0.0437],
         [0.0438],
         [0.0438],
         [0.0439],
         [0.0442],
         [0.0440],
         [0.0439],
         [0.0439],
         [0.0442],
         [0.0439],
         [0.0437],
         [0.0438]]], device='cuda:0', grad_fn=<StackBackward0>), torch.Size([1, 100, 1]))
 advantage tensor([[[-2.6864e-02, -2.6700e-02, -2.6534e-02,  ..., -8.2038e-05,
           3.5235e-04, -4.3087e-02],
         [-2.6310e-02, -2.6146e-02, -2.5981e-02,  ...,  4.7137e-04,
           9.0576e-04, -4.2533e-02],
         [-2.8425e-02, -2.8261e-02, -2.8096e-02,  ..., -1.6435e-03,
          -1.2091e-03, -4.4648e-02],
         ...,
         [-2.7698e-02, -2.7534e-02, -2.7369e-02,  ..., -9.1647e-04,
          -4.8207e-04, -4.3921e-02],
         [-2.7491e-02, -2.7328e-02, -2.7162e-02,  ..., -7.0969e-04,
          -2.7530e-04, -4.3714e-02],
         [-2.7545e-02, -2.7381e-02, -2.7215e-02,  ..., -7.6313e-04,
          -3.2874e-04, -4.3768e-02]]], device='cuda:0', grad_fn=<SubBackward0>)
Qvals: (tensor([-0.7695, -0.7773, -0.7851, -0.7931, -0.8011, -0.8092, -0.8173, -0.8256,
        -0.8339, -0.8424, -0.8509, -0.8595, -0.8681, -0.8769, -0.8858, -0.8947,
        -0.9037, -0.9129, -0.9221, -0.9314, -0.9408, -0.9503, -0.9599, -0.9696,
        -0.9794,  0.0208,  0.0210,  0.0212,  0.0214,  0.0217,  0.0219,  0.0221,
         0.0223,  0.0225,  0.0228,  0.0230,  0.0232,  0.0235,  0.0237,  0.0239,
         0.0242,  0.0244,  0.0247,  0.0249,  0.0252,  0.0254,  0.0257,  0.0259,
         0.0262,  0.0265,  0.0267,  0.0270,  0.0273,  0.0276,  0.0278,  0.0281,
         0.0284,  0.0287,  0.0290,  0.0293,  0.0296,  0.0299,  0.0302,  0.0305,
         0.0308,  0.0311,  0.0314,  0.0317,  0.0320,  0.0324,  0.0327,  0.0330,
         0.0334,  0.0337,  0.0340,  0.0344,  0.0347,  0.0351,  0.0354,  0.0358,
         0.0361,  0.0365,  0.0369,  0.0373,  0.0376,  0.0380,  0.0384,  0.0388,
         0.0392,  0.0396,  0.0400,  0.0404,  0.0408,  0.0412,  0.0416,  0.0420,
         0.0425,  0.0429,  0.0433,  0.0000], device='cuda:0'), torch.Size([100]))
 values (tensor([[[0.0438],
         [0.0439],
         [0.0437],
         [0.0435],
         [0.0441],
         [0.0435],
         [0.0438],
         [0.0437],
         [0.0432],
         [0.0439],
         [0.0436],
         [0.0436],
         [0.0438],
         [0.0439],
         [0.0440],
         [0.0440],
         [0.0436],
         [0.0433],
         [0.0440],
         [0.0436],
         [0.0441],
         [0.0440],
         [0.0439],
         [0.0438],
         [0.0436],
         [0.0435],
         [0.0438],
         [0.0438],
         [0.0438],
         [0.0438],
         [0.0438],
         [0.0440],
         [0.0440],
         [0.0438],
         [0.0436],
         [0.0439],
         [0.0439],
         [0.0441],
         [0.0439],
         [0.0438],
         [0.0437],
         [0.0436],
         [0.0446],
         [0.0441],
         [0.0439],
         [0.0440],
         [0.0439],
         [0.0435],
         [0.0442],
         [0.0433],
         [0.0438],
         [0.0436],
         [0.0442],
         [0.0435],
         [0.0436],
         [0.0434],
         [0.0438],
         [0.0441],
         [0.0440],
         [0.0437],
         [0.0437],
         [0.0435],
         [0.0437],
         [0.0439],
         [0.0436],
         [0.0440],
         [0.0439],
         [0.0441],
         [0.0438],
         [0.0442],
         [0.0437],
         [0.0435],
         [0.0442],
         [0.0441],
         [0.0438],
         [0.0433],
         [0.0436],
         [0.0437],
         [0.0440],
         [0.0434],
         [0.0439],
         [0.0440],
         [0.0441],
         [0.0441],
         [0.0439],
         [0.0438],
         [0.0439],
         [0.0440],
         [0.0439],
         [0.0439],
         [0.0436],
         [0.0435],
         [0.0434],
         [0.0434],
         [0.0442],
         [0.0439],
         [0.0437],
         [0.0438],
         [0.0441],
         [0.0438]]], device='cuda:0', grad_fn=<StackBackward0>), torch.Size([1, 100, 1]))
 advantage tensor([[[-8.1327e-01, -8.2104e-01, -8.2889e-01,  ..., -8.8217e-04,
          -4.4903e-04, -4.3764e-02],
         [-8.1338e-01, -8.2115e-01, -8.2900e-01,  ..., -9.9776e-04,
          -5.6462e-04, -4.3879e-02],
         [-8.1316e-01, -8.2094e-01, -8.2879e-01,  ..., -7.8066e-04,
          -3.4751e-04, -4.3662e-02],
         ...,
         [-8.1326e-01, -8.2103e-01, -8.2888e-01,  ..., -8.7284e-04,
          -4.3970e-04, -4.3754e-02],
         [-8.1362e-01, -8.2139e-01, -8.2924e-01,  ..., -1.2361e-03,
          -8.0299e-04, -4.4118e-02],
         [-8.1333e-01, -8.2110e-01, -8.2896e-01,  ..., -9.4884e-04,
          -5.1569e-04, -4.3830e-02]]], device='cuda:0', grad_fn=<SubBackward0>)